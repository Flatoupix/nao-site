<?php

namespace AppBundle\Repository;

use InvalidArgumentException;
use Doctrine\ORM\Tools\Pagination\Paginator;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use UserBundle\Entity\User;

/**
 * ObservationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ObservationRepository extends \Doctrine\ORM\EntityRepository
{
    public function findPublishedObsvervationForOiseau($oiseau)
    {
        $qd = $this->createQueryBuilder('o')
        ->where('o.oiseau = :oiseau')
        ->andWhere('o.publish IS NOT NULL')
        ->setParameter('oiseau', $oiseau)
        ->leftJoin('o.oiseau', 'bird')
        ->addSelect('bird')
        ->leftJoin('o.author', 'auth')
        ->addSelect('auth');

        return $qd
            ->getQuery()
            ->getResult();
    }

    public function findAllWithOiseau()
    {
        $qd = $this->createQueryBuilder('o')
        ->leftJoin('o.oiseau', 'bird')
        ->addSelect('bird');

        return $qd
            ->getQuery()
            ->getResult();
    }

    public function countNbObservations(User $user = null)
    {
        $qb = $this->createQueryBuilder('o');
        $qb
            ->select('COUNT(o.id)')
            ->andWhere('o.deleted IS NULL');
        ;

        if ($user !== null) {
            $qb->andWhere('o.author = :author');
            $qb->setParameter('author', $user);
        }

        return $qb->getQuery()->getSingleScalarResult();
    }
    
    public function listeObservationsNonSupprimer(User $user = null)
    {
        $qb = $this->createQueryBuilder('o');
        $qb
            ->orderBy('o.id', 'desc')
            ->andWhere('o.deleted IS NULL');

        if ($user !== null) {
            $qb->andWhere('o.author = :author');
            $qb->setParameter('author', $user);
        }

        return $qb->getQuery()->getResult();
    }

}
